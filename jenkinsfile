pipeline{
    agent any
    stages{

        stage("Clone repo"){
            steps{
                git branch: 'main', url: 'https://github.com/vishnu721/devops.git'
            }            
        }
        
        stage('Provision Ec2 instance'){
            steps {
                
                sh "terraform init"
                sh "terraform plan"
            }
        }

        stage('Approval'){
            steps{
                script{
                    def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])    
                }
            }
        }

        stage("Apply Terraform"){
            steps{
                sh "terraform apply -input=false -auto-approve"
            }
        }

        stage("Read TF Output"){
            steps{
                script{
                    PUBLIC_IP = sh (
                    script: "terraform output -json public_ip | jq -r '.[0]'",
                    returnStdout: true
                    ).trim()

                    println("${PUBLIC_IP}")
                }
                
            }
        }

        stage("Run Ansible Playbook"){
            steps{
                sh "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u ubuntu --private-key /var/lib/jenkins/workspace/webserver-pipeline/Ubuntu.pem -i '${PUBLIC_IP}', provision_web.yml"
            }
        }

        /*
        stage("Clean WS"){
            steps{
                cleanWs cleanWhenAborted: false, cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
            }
        }  
        */ 
    }
}
